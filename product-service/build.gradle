plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.java'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.java.productservice.ProductServiceApplication'
        )
    }
}

ext {
    set('springCloudVersion', "2022.0.2")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.hibernate:hibernate-core:6.6.3.Final'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"

    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.3'

    implementation 'org.springframework.data:spring-data-jdbc'

//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'


    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'org.glassfish:jakarta.el:4.0.2'


    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:3.1.4"
    implementation "org.springframework.cloud:spring-cloud-starter-config"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
//    implementation "org.springframework.boot:spring-boot-starter-security"
//    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
//    implementation "org.springframework.cloud:spring-cloud-starter-sleuth:3.1.4"
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.2.1.RELEASE"
    implementation 'org.postgresql:postgresql:42.7.2'
//    implementation 'org.liquibase:liquibase-core'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'org.assertj:assertj-core:3.25.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'
    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers:3.1.7'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'


}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
